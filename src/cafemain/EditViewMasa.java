package cafemain;

import dao.DaoImpl;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Sifaris_Masa;

public class EditViewMasa extends javax.swing.JFrame {

    private DaoImpl dao;
    private Long selectedRowForMasa;
    private Long masaIdBefore;
    private int id;

    public EditViewMasa() {
        initComponents();
    }

    EditViewMasa(DaoImpl dao, Long selectedRowForMasa) {
        try {
            initComponents();
            this.dao = dao;
            this.selectedRowForMasa = selectedRowForMasa;
            Sifaris_Masa sifarisMasa = dao.getSifarisMasaById(selectedRowForMasa);
            masaIdBefore = sifarisMasa.getCafeTable().getId();
        } catch (Exception ex) {
            Logger.getLogger(EditViewMasa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        masa3btn = new javax.swing.JButton();
        masa2btn = new javax.swing.JButton();
        masa1btn = new javax.swing.JButton();
        masa4btn = new javax.swing.JButton();
        masa5btn = new javax.swing.JButton();
        masa6btn = new javax.swing.JButton();
        masa8btn = new javax.swing.JButton();
        masa9btn = new javax.swing.JButton();
        masa10btn = new javax.swing.JButton();
        masa7btn = new javax.swing.JButton();
        masa11btn = new javax.swing.JButton();
        masa12btn = new javax.swing.JButton();
        masa13btn = new javax.swing.JButton();
        masa14btn = new javax.swing.JButton();
        masa16btn = new javax.swing.JButton();
        masa17btn = new javax.swing.JButton();
        masa18btn = new javax.swing.JButton();
        masa19btn = new javax.swing.JButton();
        masa15btn = new javax.swing.JButton();
        masa20btn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        bg.setBackground(new java.awt.Color(255, 255, 255));

        masa3btn.setBackground(new java.awt.Color(54, 33, 89));
        masa3btn.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        masa3btn.setForeground(new java.awt.Color(255, 255, 255));
        masa3btn.setText("MASA 3");
        masa3btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa3btnActionPerformed(evt);
            }
        });

        masa2btn.setBackground(new java.awt.Color(54, 33, 89));
        masa2btn.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        masa2btn.setForeground(new java.awt.Color(255, 255, 255));
        masa2btn.setText("MASA 2");
        masa2btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa2btnActionPerformed(evt);
            }
        });

        masa1btn.setBackground(new java.awt.Color(54, 33, 89));
        masa1btn.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        masa1btn.setForeground(new java.awt.Color(255, 255, 255));
        masa1btn.setText("MASA 1");
        masa1btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa1btnActionPerformed(evt);
            }
        });

        masa4btn.setBackground(new java.awt.Color(54, 33, 89));
        masa4btn.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        masa4btn.setForeground(new java.awt.Color(255, 255, 255));
        masa4btn.setText("MASA 4");
        masa4btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa4btnActionPerformed(evt);
            }
        });

        masa5btn.setBackground(new java.awt.Color(54, 33, 89));
        masa5btn.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        masa5btn.setForeground(new java.awt.Color(255, 255, 255));
        masa5btn.setText("MASA 5");
        masa5btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa5btnActionPerformed(evt);
            }
        });

        masa6btn.setBackground(new java.awt.Color(54, 33, 89));
        masa6btn.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        masa6btn.setForeground(new java.awt.Color(255, 255, 255));
        masa6btn.setText("MASA 6");
        masa6btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa6btnActionPerformed(evt);
            }
        });

        masa8btn.setBackground(new java.awt.Color(54, 33, 89));
        masa8btn.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        masa8btn.setForeground(new java.awt.Color(255, 255, 255));
        masa8btn.setText("MASA 8");
        masa8btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa8btnActionPerformed(evt);
            }
        });

        masa9btn.setBackground(new java.awt.Color(54, 33, 89));
        masa9btn.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        masa9btn.setForeground(new java.awt.Color(255, 255, 255));
        masa9btn.setText("MASA 9");
        masa9btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa9btnActionPerformed(evt);
            }
        });

        masa10btn.setBackground(new java.awt.Color(54, 33, 89));
        masa10btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa10btn.setForeground(new java.awt.Color(255, 255, 255));
        masa10btn.setText("MASA 10");
        masa10btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa10btnActionPerformed(evt);
            }
        });

        masa7btn.setBackground(new java.awt.Color(54, 33, 89));
        masa7btn.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        masa7btn.setForeground(new java.awt.Color(255, 255, 255));
        masa7btn.setText("MASA 7");
        masa7btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa7btnActionPerformed(evt);
            }
        });

        masa11btn.setBackground(new java.awt.Color(54, 33, 89));
        masa11btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa11btn.setForeground(new java.awt.Color(255, 255, 255));
        masa11btn.setText("MASA 11");
        masa11btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa11btnActionPerformed(evt);
            }
        });

        masa12btn.setBackground(new java.awt.Color(54, 33, 89));
        masa12btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa12btn.setForeground(new java.awt.Color(255, 255, 255));
        masa12btn.setText("MASA 12");
        masa12btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa12btnActionPerformed(evt);
            }
        });

        masa13btn.setBackground(new java.awt.Color(54, 33, 89));
        masa13btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa13btn.setForeground(new java.awt.Color(255, 255, 255));
        masa13btn.setText("MASA 13");
        masa13btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa13btnActionPerformed(evt);
            }
        });

        masa14btn.setBackground(new java.awt.Color(54, 33, 89));
        masa14btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa14btn.setForeground(new java.awt.Color(255, 255, 255));
        masa14btn.setText("MASA 14");
        masa14btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa14btnActionPerformed(evt);
            }
        });

        masa16btn.setBackground(new java.awt.Color(54, 33, 89));
        masa16btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa16btn.setForeground(new java.awt.Color(255, 255, 255));
        masa16btn.setText("MASA 16");
        masa16btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa16btnActionPerformed(evt);
            }
        });

        masa17btn.setBackground(new java.awt.Color(54, 33, 89));
        masa17btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa17btn.setForeground(new java.awt.Color(255, 255, 255));
        masa17btn.setText("MASA 17");
        masa17btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa17btnActionPerformed(evt);
            }
        });

        masa18btn.setBackground(new java.awt.Color(54, 33, 89));
        masa18btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa18btn.setForeground(new java.awt.Color(255, 255, 255));
        masa18btn.setText("MASA 18");
        masa18btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa18btnActionPerformed(evt);
            }
        });

        masa19btn.setBackground(new java.awt.Color(54, 33, 89));
        masa19btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa19btn.setForeground(new java.awt.Color(255, 255, 255));
        masa19btn.setText("MASA 19");
        masa19btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa19btnActionPerformed(evt);
            }
        });

        masa15btn.setBackground(new java.awt.Color(54, 33, 89));
        masa15btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa15btn.setForeground(new java.awt.Color(255, 255, 255));
        masa15btn.setText("MASA 15");
        masa15btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa15btnActionPerformed(evt);
            }
        });

        masa20btn.setBackground(new java.awt.Color(54, 33, 89));
        masa20btn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        masa20btn.setForeground(new java.awt.Color(255, 255, 255));
        masa20btn.setText("MASA 20");
        masa20btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masa20btnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(0, 255, 102));
        updateBtn.setFont(updateBtn.getFont().deriveFont(updateBtn.getFont().getSize()+67f));
        updateBtn.setText("DƏYİŞDİR");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(masa3btn)
                        .addGap(48, 48, 48)
                        .addComponent(masa4btn))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(masa1btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(masa8btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(masa15btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(masa2btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(masa9btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(masa16btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(masa17btn, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(masa10btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(48, 48, 48)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(masa11btn, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(masa18btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(51, 51, 51)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(masa5btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masa12btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masa19btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(masa6btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masa13btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masa20btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(53, 53, 53)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(masa7btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masa14btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45))
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(masa1btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa2btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa3btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa4btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa5btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa6btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa7btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(masa12btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa13btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa14btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa11btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa10btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa9btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa8btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(masa16btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa15btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa17btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa18btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa19btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masa20btn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(updateBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void masa3btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa3btnActionPerformed
        id = 3;
    }//GEN-LAST:event_masa3btnActionPerformed

    private void masa2btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa2btnActionPerformed
        id = 2;
    }//GEN-LAST:event_masa2btnActionPerformed

    private void masa1btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa1btnActionPerformed
        id = 1;
    }//GEN-LAST:event_masa1btnActionPerformed

    private void masa4btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa4btnActionPerformed
        id = 4;
    }//GEN-LAST:event_masa4btnActionPerformed

    private void masa5btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa5btnActionPerformed
        id = 5;
    }//GEN-LAST:event_masa5btnActionPerformed

    private void masa6btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa6btnActionPerformed
        id = 6;
    }//GEN-LAST:event_masa6btnActionPerformed

    private void masa8btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa8btnActionPerformed
        id = 8;
    }//GEN-LAST:event_masa8btnActionPerformed

    private void masa9btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa9btnActionPerformed
        id = 9;
    }//GEN-LAST:event_masa9btnActionPerformed

    private void masa10btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa10btnActionPerformed
        id = 10;
    }//GEN-LAST:event_masa10btnActionPerformed

    private void masa7btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa7btnActionPerformed
        id = 7;
    }//GEN-LAST:event_masa7btnActionPerformed

    private void masa11btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa11btnActionPerformed
        id = 11;
    }//GEN-LAST:event_masa11btnActionPerformed

    private void masa12btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa12btnActionPerformed
        id = 12;
    }//GEN-LAST:event_masa12btnActionPerformed

    private void masa13btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa13btnActionPerformed
        id = 13;
    }//GEN-LAST:event_masa13btnActionPerformed

    private void masa14btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa14btnActionPerformed
        id = 14;
    }//GEN-LAST:event_masa14btnActionPerformed

    private void masa16btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa16btnActionPerformed
        id = 16;
    }//GEN-LAST:event_masa16btnActionPerformed

    private void masa17btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa17btnActionPerformed
        id = 17;
    }//GEN-LAST:event_masa17btnActionPerformed

    private void masa18btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa18btnActionPerformed
        id = 18;
    }//GEN-LAST:event_masa18btnActionPerformed

    private void masa19btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa19btnActionPerformed
        id = 19;
    }//GEN-LAST:event_masa19btnActionPerformed

    private void masa15btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa15btnActionPerformed
        id = 15;
    }//GEN-LAST:event_masa15btnActionPerformed

    private void masa20btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masa20btnActionPerformed
        id = 20;
    }//GEN-LAST:event_masa20btnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
            boolean isUpdated;
            switch (id) {
                case 1:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 2:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();

                    }
                    break;
                case 3:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 4:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 5:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        EditOrder editOrder = new EditOrder(dao, selectedRowForMasa);
                        this.dispose();

                    }
                    break;
                case 6:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 7:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 8:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 9:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 10:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 11:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 12:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 13:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 14:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 15:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 16:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 17:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 18:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 19:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                case 20:
                    isUpdated = dao.updateForMasaId(selectedRowForMasa, (long) id);
                    if (isUpdated) {
                        boolean changeTableStatus = dao.updateTableStatus((long) id);
                        List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
                            if (Objects.equals(sifarisMasa.getCafeTable().getId(), masaIdBefore)) {
                                boolean changeTableStatus2 = dao.updateTableStatus(masaIdBefore);
                            } else {
                                boolean changeTableStatusForEmpty = dao.updateTableStatusForEmpty(masaIdBefore);
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Masa dəyişdirildi...");
                        this.dispose();
                    }
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Sifarişi əlavə etmək isdədiyiviz masanı seçin !!!");
                    break;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_updateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton masa10btn;
    private javax.swing.JButton masa11btn;
    private javax.swing.JButton masa12btn;
    private javax.swing.JButton masa13btn;
    private javax.swing.JButton masa14btn;
    private javax.swing.JButton masa15btn;
    private javax.swing.JButton masa16btn;
    private javax.swing.JButton masa17btn;
    private javax.swing.JButton masa18btn;
    private javax.swing.JButton masa19btn;
    private javax.swing.JButton masa1btn;
    private javax.swing.JButton masa20btn;
    private javax.swing.JButton masa2btn;
    private javax.swing.JButton masa3btn;
    private javax.swing.JButton masa4btn;
    private javax.swing.JButton masa5btn;
    private javax.swing.JButton masa6btn;
    private javax.swing.JButton masa7btn;
    private javax.swing.JButton masa8btn;
    private javax.swing.JButton masa9btn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
