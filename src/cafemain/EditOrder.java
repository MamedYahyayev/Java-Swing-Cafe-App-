package cafemain;

import dao.DaoImpl;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Item;
import model.Menu;
import model.MenuIn;
import model.Sifaris;
import model.Sifaris_Masa;

public class EditOrder extends javax.swing.JFrame {

    private DaoImpl dao;
    private Long selectedRow;

    public EditOrder() {
        initComponents();
    }

    EditOrder(DaoImpl dao, Long selectedRow) {
        try {
            initComponents();
            this.dao = dao;
            this.selectedRow = selectedRow;
            Sifaris_Masa sifarisMasa = dao.getSifarisMasaById(selectedRow);
            List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaByMasaId(sifarisMasa.getCafeTable().getId());
            ViewSifarisListInTable(sifarisMasaList);
        } catch (Exception ex) {
            Logger.getLogger(EditOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        rezervTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        menuCombo = new javax.swing.JComboBox();
        mealCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        spinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        orderTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        priceTxt = new javax.swing.JTextField();
        updateOrderBtn = new javax.swing.JButton();
        addToTableBtn = new javax.swing.JButton();
        addForEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        orderTable.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        orderTable.setFocusable(false);
        orderTable.setRowHeight(25);
        orderTable.setSelectionBackground(new java.awt.Color(54, 33, 89));
        jScrollPane1.setViewportView(orderTable);

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel1.setText("REZERV");

        rezervTxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        rezervTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rezervTxtActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel2.setText("MENYU");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel3.setText("YEMƏK");

        menuCombo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        menuCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuComboActionPerformed(evt);
            }
        });

        mealCombo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        mealCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealComboActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel4.setText("SAY");

        spinner.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        spinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel5.setText("SİFARİŞ");

        orderTxt.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel6.setText("QİYMƏT");

        priceTxt.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        updateOrderBtn.setBackground(new java.awt.Color(54, 33, 89));
        updateOrderBtn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        updateOrderBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateOrderBtn.setText("SİFARİŞİ DÜZƏLT");
        updateOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateOrderBtnActionPerformed(evt);
            }
        });

        addToTableBtn.setBackground(new java.awt.Color(54, 33, 89));
        addToTableBtn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        addToTableBtn.setForeground(new java.awt.Color(255, 255, 255));
        addToTableBtn.setText("MASANI DƏYİŞDİR");
        addToTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToTableBtnActionPerformed(evt);
            }
        });

        addForEdit.setBackground(new java.awt.Color(54, 33, 89));
        addForEdit.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        addForEdit.setForeground(new java.awt.Color(255, 255, 255));
        addForEdit.setText("ƏLAVƏ ET");
        addForEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addForEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(78, 78, 78))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mealCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rezervTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(spinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(menuCombo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(orderTxt)
                                    .addComponent(priceTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(195, 195, 195)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(updateOrderBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                    .addComponent(addToTableBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                    .addComponent(addForEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(orderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rezervTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(menuCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(55, 55, 55)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mealCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addToTableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addForEdit)
                    .addComponent(jLabel4))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rezervTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rezervTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rezervTxtActionPerformed

    private void menuComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuComboActionPerformed
        try {
            mealCombo.removeAllItems();
            if (mealCombo != null) {

                Item menuItem = (Item) menuCombo.getSelectedItem();
                List<MenuIn> menuInList = dao.getMenuInListByMenuId(menuItem.getId());
                ViewMenuInListInCombo(menuInList);
                int say = (int) spinner.getValue();
                if (say == 0) {
                    orderTxt.setText("");
                    priceTxt.setText("");
                }

            }
        } catch (Exception ex) {
            Logger.getLogger(AddOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuComboActionPerformed

    private void mealComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealComboActionPerformed
        spinner.setValue(0);
    }//GEN-LAST:event_mealComboActionPerformed

    private void spinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerStateChanged
        try {
            int say = (int) spinner.getValue();

            if (mealCombo != null) {

                Item menuInItem = (Item) mealCombo.getSelectedItem();
                Item menuItem = (Item) menuCombo.getSelectedItem();
                if (menuInItem != null) {
                    MenuIn menuIn = dao.getMenuInById(menuInItem.getId(), menuItem.getId());

                    orderTxt.setText(say + " ədəd " + menuIn.getMenyuInName());
                    Float price = say * menuIn.getPrice();
                    priceTxt.setText(price.toString());
                    if (say == 0) {
                        orderTxt.setText("");
                        priceTxt.setText("");
                    }
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(AddOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_spinnerStateChanged

    private void updateOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateOrderBtnActionPerformed
        try {
            String resName = rezervTxt.getText();
            Item menuItem = (Item) menuCombo.getSelectedItem();
            Item menuInItem = (Item) mealCombo.getSelectedItem();
            int say = (int) spinner.getValue();
            String sifarisTxt = orderTxt.getText();
            Float price = Float.valueOf(priceTxt.getText());

            Sifaris sifaris = new Sifaris();
            Menu menu = new Menu();
            MenuIn menuIn = new MenuIn();

            menu.setId(menuItem.getId());
            menuIn.setId(menuInItem.getId());
            menuIn.setMenu(menu);

            sifaris.setResName(resName);
            sifaris.setPrice(price);
            sifaris.setSay(say);
            sifaris.setSifaris(sifarisTxt);
            sifaris.setMenuIn(menuIn);

            Sifaris_Masa sifarisMasa = dao.getSifarisMasaById(selectedRow);
            boolean isUpdate = dao.update(sifaris, sifarisMasa.getSifaris().getId());
            if (isUpdate) {
                JOptionPane.showMessageDialog(null, "Dəyişikliklər edildi...");
                List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaList();
                ViewSifarisListInTable(sifarisMasaList);
            }

        } catch (Exception ex) {
            Logger.getLogger(AddOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_updateOrderBtnActionPerformed

    private void addToTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToTableBtnActionPerformed
        try {
            int rowIndex = orderTable.getSelectedRow();
            Long selectedRowForMasa = (Long) orderTable.getValueAt(rowIndex, 0);
            EditViewMasa editViewMasa = new EditViewMasa(dao, selectedRowForMasa);
            editViewMasa.setVisible(true);
            Sifaris_Masa sifarisMasa = dao.getSifarisMasaById(selectedRow);
            List<Sifaris_Masa> sifarisMasaList = dao.getSifarisMasaByMasaId(sifarisMasa.getCafeTable().getId());
            ViewSifarisListInTable(sifarisMasaList);
        } catch (Exception ex) {
            Logger.getLogger(EditOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_addToTableBtnActionPerformed

    private void addForEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addForEditActionPerformed
        try {
            mealCombo.removeAllItems();
            if (mealCombo != null) {
                int rowIndex = orderTable.getSelectedRow();
                Long selectedRowInOrderTable = (Long) orderTable.getValueAt(rowIndex, 0);
                Sifaris_Masa sifarisMasa = dao.getSifarisMasaById(selectedRowInOrderTable);
                rezervTxt.setText(sifarisMasa.getSifaris().getResName());
                ViewMenuInComboForEdit(sifarisMasa);
                ViewMenuInInComboForEdit(sifarisMasa);
                spinner.setValue(sifarisMasa.getSifaris().getSay());
                orderTxt.setText(sifarisMasa.getSifaris().getSifaris());
                priceTxt.setText(sifarisMasa.getSifaris().getPrice().toString());
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Hər hansı bir sətri seçin !!!");
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_addForEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addForEdit;
    private javax.swing.JButton addToTableBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox mealCombo;
    private javax.swing.JComboBox menuCombo;
    private javax.swing.JTable orderTable;
    private javax.swing.JTextField orderTxt;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JTextField rezervTxt;
    private javax.swing.JSpinner spinner;
    private javax.swing.JButton updateOrderBtn;
    // End of variables declaration//GEN-END:variables

    private void ViewSifarisListInTable(List<Sifaris_Masa> sifarisMasaList) {
        DefaultTableModel table = new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

        };

        orderTable.setModel(table);
        table.addColumn("Id");
        table.addColumn("№");
        table.addColumn("Rezerv");
        table.addColumn("Masa");
        table.addColumn("Say");
        table.addColumn("Menyu");
        table.addColumn("Yemək");
        table.addColumn("Sifariş");
        table.addColumn("Hesab");
        table.addColumn("Sifariş Vaxtı");

        for (Sifaris_Masa sifarisMasa : sifarisMasaList) {
            Object data[] = new Object[]{
                sifarisMasa.getId(), sifarisMasa.getRownum(), sifarisMasa.getSifaris().getResName(),
                sifarisMasa.getCafeTable().getName(), sifarisMasa.getSifaris().getSay(),
                sifarisMasa.getSifaris().getMenuIn().getMenu().getName(), sifarisMasa.getSifaris().getMenuIn().getMenyuInName(),
                sifarisMasa.getSifaris().getSifaris(), sifarisMasa.getSifaris().getPrice(), sifarisMasa.getOrderDate()

            };
            table.addRow(data);
            orderTable.getColumnModel().getColumn(0).setMinWidth(0);
            orderTable.getColumnModel().getColumn(0).setMaxWidth(0);
            orderTable.getColumnModel().getColumn(0).setWidth(0);
        }
    }

    private void ViewMenuInComboForEdit(Sifaris_Masa sifarisMasa) throws Exception {
        DefaultComboBoxModel model = (DefaultComboBoxModel) menuCombo.getModel();
        List<Menu> menuList = dao.getMenuList();
        for (Menu menu : menuList) {
            model.addElement(new Item(menu.getId(), menu.getName()));
        }
        model.setSelectedItem(new Item(sifarisMasa.getSifaris().getMenuIn().getMenu().getId(), sifarisMasa.getSifaris().getMenuIn().getMenu().getName()));

    }

    private void ViewMenuInInComboForEdit(Sifaris_Masa sifarisMasa) throws Exception {
        DefaultComboBoxModel model = (DefaultComboBoxModel) mealCombo.getModel();
        Item menuItem = (Item) menuCombo.getSelectedItem();
        List<MenuIn> menuInList = dao.getMenuInListByMenuId(menuItem.getId());
        for (MenuIn menuIn : menuInList) {
            model.addElement(new Item(menuIn.getId(), menuIn.getMenyuInName() + "--" + menuIn.getPrice() + " AZN"));
        }
        model.setSelectedItem(new Item(sifarisMasa.getSifaris().getMenuIn().getId(), sifarisMasa.getSifaris().getMenuIn().getMenyuInName() + "--" + sifarisMasa.getSifaris().getMenuIn().getPrice() + " AZN"));
    }

    private void ViewMenuInListInCombo(List<MenuIn> menuInList) {
        DefaultComboBoxModel model = (DefaultComboBoxModel) mealCombo.getModel();
        for (MenuIn menuIn : menuInList) {
            model.addElement(new Item(menuIn.getId(), menuIn.getMenyuInName() + "--" + menuIn.getPrice() + " AZN"));
        }
    }
}
